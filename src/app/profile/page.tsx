"use client";
import React, { useEffect, useState } from "react";
import { userType } from "../../../types/global/UserType";
import { useRouter } from "next/navigation";
import { signOut } from "next-auth/react";
import CheckAccountLayout from "@/components/checkAccountLayout/CheckAccountLayout";
import styles from "./profile.module.css";
import TextInput from "@/components/TextInput/TextInput";
import SelectInput from "@/components/selectInput/SelectInput";
import PlainButton from "@/components/plainButton/plainButton";
import Loading from "@/components/Loading/Loading";
import { Button } from "@/components/ui/button";
import { Commande, Product_commande } from "../../../types/home/Commande";
import axios from "axios";
import { comma } from "postcss/lib/list";

const Page = ({ params }: { params: { user: userType } }) => {
  const router = useRouter();

  const preferences = ["Homme", "Femme", "Mix"];

  const [username, setUsername] = useState("");
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [gender, setGender] = useState(preferences[0]);
  const [email, setEmail] = useState("");
  const [commande, setCommande] = useState<Commande[]>([]);
  const [product, setProduct] = useState<Product_commande[]>([]);
  let index = 0



  const [page, setPage] = useState(true);

  const General = () => {
    setPage(true)
  };

  const Historique = () => {
    setPage(false)
  };

  useEffect(() => {
    if (commande.length === 0) {
      axios
        .get(`/api/commandes?account_uid=${params.user.user_id}`)
        .then((response) => {
          console.log(response);
          setCommande(response.data)
        })
        .catch((error) => {
          console.error(error)
        })
    }
  }, [commande])

  useEffect(() => {
    if (commande.length != 0) {
      {
        commande.map(c => {
          return (
            setProduct(c.product_commande)
          )
        })
      }
      console.log(product)
    }
  }, [commande])


  useEffect(() => {
    if (params.user === null) {
      router.push("/login");
    } else {
      if (params.user) {
        setUsername(params.user.username);
        setFirstName(params.user.first_name);
        setLastName(params.user.last_name);
        setEmail(params.user.email);
      }
    }
  }, [params]);

  return (
    <>


      {params.user && page ? (
        <CheckAccountLayout user={params.user}>
          <div className={styles.container}>
            <div className={styles.general}>
              <div className={styles.profile_picture}>
                {page ? (
                  <div className={styles.menu_container}>
                    <div className={styles.buttonContainer}>
                      <button onClick={General} className={styles.buttonPlain}>
                        <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M11 13.0625C12.1391 13.0625 13.0625 12.1391 13.0625 11C13.0625 9.86091 12.1391 8.9375 11 8.9375C9.86091 8.9375 8.9375 9.86091 8.9375 11C8.9375 12.1391 9.86091 13.0625 11 13.0625Z" fill="black" fillOpacity="0.8" />
                          <path d="M20.2121 12.8906L20.1919 12.8743L18.8358 11.8108C18.7499 11.7429 18.6814 11.6555 18.6358 11.556C18.5903 11.4564 18.569 11.3474 18.5737 11.238V10.7413C18.5694 10.6326 18.5909 10.5245 18.6366 10.4257C18.6822 10.327 18.7506 10.2404 18.8362 10.1733L20.1919 9.10938L20.2121 9.09305C20.4212 8.91888 20.5615 8.67602 20.6079 8.4079C20.6544 8.13978 20.6039 7.86387 20.4656 7.62953L18.6304 4.45414C18.6283 4.45114 18.6264 4.44798 18.6248 4.44469C18.4858 4.21359 18.2702 4.03848 18.0155 3.94979C17.7607 3.86109 17.483 3.8644 17.2305 3.95914L17.2155 3.96473L15.6213 4.60625C15.5207 4.64693 15.4118 4.66312 15.3037 4.65348C15.1956 4.64385 15.0914 4.60866 14.9996 4.55082C14.8586 4.46202 14.7154 4.37809 14.5699 4.29902C14.4755 4.24786 14.3945 4.17524 14.3334 4.08702C14.2723 3.9988 14.2327 3.89744 14.218 3.79113L13.9778 2.09L13.9726 2.05906C13.9203 1.79558 13.7789 1.55812 13.5722 1.3866C13.3654 1.21508 13.106 1.11994 12.8374 1.11719H9.16268C8.89028 1.11806 8.62693 1.21503 8.41903 1.39103C8.21112 1.56702 8.07199 1.81075 8.02615 2.07926L8.02229 2.10332L7.78295 3.80789C7.76827 3.9139 7.72904 4.01501 7.6684 4.10318C7.60775 4.19136 7.52736 4.26415 7.43361 4.31578C7.28767 4.39439 7.14436 4.47779 7.00393 4.56586C6.91226 4.62335 6.80826 4.65826 6.70047 4.66775C6.59269 4.67724 6.48419 4.66102 6.38389 4.62043L4.78846 3.9759L4.77342 3.96988C4.52053 3.87504 4.2424 3.87185 3.9874 3.96088C3.73241 4.04991 3.5167 4.22552 3.37779 4.45715L3.37221 4.4666L1.53443 7.64414C1.39592 7.87872 1.34536 8.15493 1.3918 8.42337C1.43825 8.69181 1.57867 8.93497 1.78795 9.10938L1.80815 9.1257L3.16424 10.1892C3.25012 10.2571 3.31865 10.3445 3.36422 10.444C3.40978 10.5436 3.43108 10.6526 3.42635 10.762V11.2587C3.43065 11.3674 3.4091 11.4755 3.36346 11.5743C3.31782 11.673 3.24939 11.7596 3.16381 11.8267L1.80815 12.8906L1.78795 12.907C1.57888 13.0811 1.43857 13.324 1.39213 13.5921C1.34568 13.8602 1.39612 14.1361 1.53443 14.3705L3.36963 17.5459C3.37174 17.5489 3.37361 17.552 3.37522 17.5553C3.51427 17.7864 3.72988 17.9615 3.98459 18.0502C4.2393 18.1389 4.51703 18.1356 4.76955 18.0409L4.78459 18.0353L6.37744 17.3937C6.47806 17.3531 6.5869 17.3369 6.695 17.3465C6.8031 17.3562 6.90737 17.3913 6.9992 17.4492C7.14014 17.5383 7.28337 17.6222 7.42889 17.701C7.52324 17.7521 7.60424 17.8248 7.66537 17.913C7.7265 18.0012 7.76604 18.1026 7.7808 18.2089L8.01971 19.91L8.02486 19.9409C8.07724 20.2049 8.21902 20.4426 8.42628 20.6142C8.63354 20.7858 8.89362 20.8806 9.16268 20.8828H12.8374C13.1098 20.8819 13.3731 20.785 13.581 20.609C13.7889 20.433 13.9281 20.1893 13.9739 19.9207L13.9778 19.8967L14.2171 18.1921C14.232 18.0859 14.2716 17.9847 14.3326 17.8965C14.3936 17.8083 14.4744 17.7356 14.5686 17.6842C14.7155 17.6052 14.859 17.5214 14.9983 17.4341C15.0899 17.3767 15.1939 17.3417 15.3017 17.3322C15.4095 17.3228 15.518 17.339 15.6183 17.3796L17.2137 18.022L17.2288 18.028C17.4816 18.123 17.7598 18.1263 18.0149 18.0372C18.2699 17.9482 18.4856 17.7725 18.6244 17.5407C18.6261 17.5375 18.628 17.5343 18.63 17.5312L20.4652 14.3563C20.6039 14.1217 20.6547 13.8454 20.6083 13.5769C20.5619 13.3083 20.4215 13.0651 20.2121 12.8906ZM14.4337 11.1616C14.4024 11.827 14.1784 12.4689 13.789 13.0094C13.3996 13.5499 12.8616 13.9656 12.2404 14.206C11.6191 14.4464 10.9414 14.5011 10.2896 14.3634C9.63785 14.2257 9.04013 13.9017 8.56912 13.4306C8.09812 12.9596 7.77413 12.3618 7.63656 11.71C7.49898 11.0582 7.55375 10.3805 7.7942 9.7593C8.03464 9.13807 8.45041 8.60009 8.99094 8.21077C9.53148 7.82145 10.1735 7.59758 10.8389 7.56637C11.3166 7.54533 11.7935 7.62394 12.2391 7.79718C12.6848 7.97042 13.0896 8.2345 13.4277 8.57264C13.7658 8.91078 14.0298 9.31557 14.203 9.76128C14.3762 10.207 14.4547 10.6839 14.4337 11.1616Z" fill="black" fillOpacity="0.8" />
                          <path d="M11 13.0625C12.1391 13.0625 13.0625 12.1391 13.0625 11C13.0625 9.86091 12.1391 8.9375 11 8.9375C9.86091 8.9375 8.9375 9.86091 8.9375 11C8.9375 12.1391 9.86091 13.0625 11 13.0625Z" fill="black" fillOpacity="0.8" />
                          <path d="M20.2121 12.8906L20.1919 12.8743L18.8358 11.8108C18.7499 11.7429 18.6814 11.6555 18.6358 11.556C18.5903 11.4564 18.569 11.3474 18.5737 11.238V10.7413C18.5694 10.6326 18.5909 10.5245 18.6366 10.4257C18.6822 10.327 18.7506 10.2404 18.8362 10.1733L20.1919 9.10938L20.2121 9.09305C20.4212 8.91888 20.5615 8.67602 20.6079 8.4079C20.6544 8.13978 20.6039 7.86387 20.4656 7.62953L18.6304 4.45414C18.6283 4.45114 18.6264 4.44798 18.6248 4.44469C18.4858 4.21359 18.2702 4.03848 18.0155 3.94979C17.7607 3.86109 17.483 3.8644 17.2305 3.95914L17.2155 3.96473L15.6213 4.60625C15.5207 4.64693 15.4118 4.66312 15.3037 4.65348C15.1956 4.64385 15.0914 4.60866 14.9996 4.55082C14.8586 4.46202 14.7154 4.37809 14.5699 4.29902C14.4755 4.24786 14.3945 4.17524 14.3334 4.08702C14.2723 3.9988 14.2327 3.89744 14.218 3.79113L13.9778 2.09L13.9726 2.05906C13.9203 1.79558 13.7789 1.55812 13.5722 1.3866C13.3654 1.21508 13.106 1.11994 12.8374 1.11719H9.16268C8.89028 1.11806 8.62693 1.21503 8.41903 1.39103C8.21112 1.56702 8.07199 1.81075 8.02615 2.07926L8.02229 2.10332L7.78295 3.80789C7.76827 3.9139 7.72904 4.01501 7.6684 4.10318C7.60775 4.19136 7.52736 4.26415 7.43361 4.31578C7.28767 4.39439 7.14436 4.47779 7.00393 4.56586C6.91226 4.62335 6.80826 4.65826 6.70047 4.66775C6.59269 4.67724 6.48419 4.66102 6.38389 4.62043L4.78846 3.9759L4.77342 3.96988C4.52053 3.87504 4.2424 3.87185 3.9874 3.96088C3.73241 4.04991 3.5167 4.22552 3.37779 4.45715L3.37221 4.4666L1.53443 7.64414C1.39592 7.87872 1.34536 8.15493 1.3918 8.42337C1.43825 8.69181 1.57867 8.93497 1.78795 9.10938L1.80815 9.1257L3.16424 10.1892C3.25012 10.2571 3.31865 10.3445 3.36422 10.444C3.40978 10.5436 3.43108 10.6526 3.42635 10.762V11.2587C3.43065 11.3674 3.4091 11.4755 3.36346 11.5743C3.31782 11.673 3.24939 11.7596 3.16381 11.8267L1.80815 12.8906L1.78795 12.907C1.57888 13.0811 1.43857 13.324 1.39213 13.5921C1.34568 13.8602 1.39612 14.1361 1.53443 14.3705L3.36963 17.5459C3.37174 17.5489 3.37361 17.552 3.37522 17.5553C3.51427 17.7864 3.72988 17.9615 3.98459 18.0502C4.2393 18.1389 4.51703 18.1356 4.76955 18.0409L4.78459 18.0353L6.37744 17.3937C6.47806 17.3531 6.5869 17.3369 6.695 17.3465C6.8031 17.3562 6.90737 17.3913 6.9992 17.4492C7.14014 17.5383 7.28337 17.6222 7.42889 17.701C7.52324 17.7521 7.60424 17.8248 7.66537 17.913C7.7265 18.0012 7.76604 18.1026 7.7808 18.2089L8.01971 19.91L8.02486 19.9409C8.07724 20.2049 8.21902 20.4426 8.42628 20.6142C8.63354 20.7858 8.89362 20.8806 9.16268 20.8828H12.8374C13.1098 20.8819 13.3731 20.785 13.581 20.609C13.7889 20.433 13.9281 20.1893 13.9739 19.9207L13.9778 19.8967L14.2171 18.1921C14.232 18.0859 14.2716 17.9847 14.3326 17.8965C14.3936 17.8083 14.4744 17.7356 14.5686 17.6842C14.7155 17.6052 14.859 17.5214 14.9983 17.4341C15.0899 17.3767 15.1939 17.3417 15.3017 17.3322C15.4095 17.3228 15.518 17.339 15.6183 17.3796L17.2137 18.022L17.2288 18.028C17.4816 18.123 17.7598 18.1263 18.0149 18.0372C18.2699 17.9482 18.4856 17.7725 18.6244 17.5407C18.6261 17.5375 18.628 17.5343 18.63 17.5312L20.4652 14.3563C20.6039 14.1217 20.6547 13.8454 20.6083 13.5769C20.5619 13.3083 20.4215 13.0651 20.2121 12.8906ZM14.4337 11.1616C14.4024 11.827 14.1784 12.4689 13.789 13.0094C13.3996 13.5499 12.8616 13.9656 12.2404 14.206C11.6191 14.4464 10.9414 14.5011 10.2896 14.3634C9.63785 14.2257 9.04013 13.9017 8.56912 13.4306C8.09812 12.9596 7.77413 12.3618 7.63656 11.71C7.49898 11.0582 7.55375 10.3805 7.7942 9.7593C8.03464 9.13807 8.45041 8.60009 8.99094 8.21077C9.53148 7.82145 10.1735 7.59758 10.8389 7.56637C11.3166 7.54533 11.7935 7.62394 12.2391 7.79718C12.6848 7.97042 13.0896 8.2345 13.4277 8.57264C13.7658 8.91078 14.0298 9.31557 14.203 9.76128C14.3762 10.207 14.4547 10.6839 14.4337 11.1616Z" fill="black" fillOpacity="0.8" />

                        </svg>
                        <span className={styles.menu_button}>Général</span>
                      </button>
                    </div>
                    <div className={styles.buttonContainer}>
                      <button onClick={Historique} className={styles.button2}>
                        <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9 0.0625C4.06418 0.0625 0.0625 4.06418 0.0625 9C0.0625 13.9358 4.06418 17.9375 9 17.9375C13.9358 17.9375 17.9375 13.9358 17.9375 9C17.9375 4.06418 13.9358 0.0625 9 0.0625ZM13.125 10.375H9C8.81766 10.375 8.6428 10.3026 8.51386 10.1736C8.38493 10.0447 8.3125 9.86984 8.3125 9.6875V3.5C8.3125 3.31766 8.38493 3.1428 8.51386 3.01386C8.6428 2.88493 8.81766 2.8125 9 2.8125C9.18234 2.8125 9.35721 2.88493 9.48614 3.01386C9.61507 3.1428 9.6875 3.31766 9.6875 3.5V9H13.125C13.3073 9 13.4822 9.07243 13.6111 9.20136C13.7401 9.33029 13.8125 9.50516 13.8125 9.6875C13.8125 9.86984 13.7401 10.0447 13.6111 10.1736C13.4822 10.3026 13.3073 10.375 13.125 10.375Z" fill="black" />
                        </svg>
                        <span className={styles.menu_button}>Historique</span>
                      </button>
                    </div>
                  </div>

                ) : (
                  <div className={styles.menu_container}>
                    <div className={styles.buttonContainer}>
                      <button onClick={General} className={styles.button1}>
                        <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M11 13.0625C12.1391 13.0625 13.0625 12.1391 13.0625 11C13.0625 9.86091 12.1391 8.9375 11 8.9375C9.86091 8.9375 8.9375 9.86091 8.9375 11C8.9375 12.1391 9.86091 13.0625 11 13.0625Z" fill="black" fillOpacity="0.8" />
                          <path d="M20.2121 12.8906L20.1919 12.8743L18.8358 11.8108C18.7499 11.7429 18.6814 11.6555 18.6358 11.556C18.5903 11.4564 18.569 11.3474 18.5737 11.238V10.7413C18.5694 10.6326 18.5909 10.5245 18.6366 10.4257C18.6822 10.327 18.7506 10.2404 18.8362 10.1733L20.1919 9.10938L20.2121 9.09305C20.4212 8.91888 20.5615 8.67602 20.6079 8.4079C20.6544 8.13978 20.6039 7.86387 20.4656 7.62953L18.6304 4.45414C18.6283 4.45114 18.6264 4.44798 18.6248 4.44469C18.4858 4.21359 18.2702 4.03848 18.0155 3.94979C17.7607 3.86109 17.483 3.8644 17.2305 3.95914L17.2155 3.96473L15.6213 4.60625C15.5207 4.64693 15.4118 4.66312 15.3037 4.65348C15.1956 4.64385 15.0914 4.60866 14.9996 4.55082C14.8586 4.46202 14.7154 4.37809 14.5699 4.29902C14.4755 4.24786 14.3945 4.17524 14.3334 4.08702C14.2723 3.9988 14.2327 3.89744 14.218 3.79113L13.9778 2.09L13.9726 2.05906C13.9203 1.79558 13.7789 1.55812 13.5722 1.3866C13.3654 1.21508 13.106 1.11994 12.8374 1.11719H9.16268C8.89028 1.11806 8.62693 1.21503 8.41903 1.39103C8.21112 1.56702 8.07199 1.81075 8.02615 2.07926L8.02229 2.10332L7.78295 3.80789C7.76827 3.9139 7.72904 4.01501 7.6684 4.10318C7.60775 4.19136 7.52736 4.26415 7.43361 4.31578C7.28767 4.39439 7.14436 4.47779 7.00393 4.56586C6.91226 4.62335 6.80826 4.65826 6.70047 4.66775C6.59269 4.67724 6.48419 4.66102 6.38389 4.62043L4.78846 3.9759L4.77342 3.96988C4.52053 3.87504 4.2424 3.87185 3.9874 3.96088C3.73241 4.04991 3.5167 4.22552 3.37779 4.45715L3.37221 4.4666L1.53443 7.64414C1.39592 7.87872 1.34536 8.15493 1.3918 8.42337C1.43825 8.69181 1.57867 8.93497 1.78795 9.10938L1.80815 9.1257L3.16424 10.1892C3.25012 10.2571 3.31865 10.3445 3.36422 10.444C3.40978 10.5436 3.43108 10.6526 3.42635 10.762V11.2587C3.43065 11.3674 3.4091 11.4755 3.36346 11.5743C3.31782 11.673 3.24939 11.7596 3.16381 11.8267L1.80815 12.8906L1.78795 12.907C1.57888 13.0811 1.43857 13.324 1.39213 13.5921C1.34568 13.8602 1.39612 14.1361 1.53443 14.3705L3.36963 17.5459C3.37174 17.5489 3.37361 17.552 3.37522 17.5553C3.51427 17.7864 3.72988 17.9615 3.98459 18.0502C4.2393 18.1389 4.51703 18.1356 4.76955 18.0409L4.78459 18.0353L6.37744 17.3937C6.47806 17.3531 6.5869 17.3369 6.695 17.3465C6.8031 17.3562 6.90737 17.3913 6.9992 17.4492C7.14014 17.5383 7.28337 17.6222 7.42889 17.701C7.52324 17.7521 7.60424 17.8248 7.66537 17.913C7.7265 18.0012 7.76604 18.1026 7.7808 18.2089L8.01971 19.91L8.02486 19.9409C8.07724 20.2049 8.21902 20.4426 8.42628 20.6142C8.63354 20.7858 8.89362 20.8806 9.16268 20.8828H12.8374C13.1098 20.8819 13.3731 20.785 13.581 20.609C13.7889 20.433 13.9281 20.1893 13.9739 19.9207L13.9778 19.8967L14.2171 18.1921C14.232 18.0859 14.2716 17.9847 14.3326 17.8965C14.3936 17.8083 14.4744 17.7356 14.5686 17.6842C14.7155 17.6052 14.859 17.5214 14.9983 17.4341C15.0899 17.3767 15.1939 17.3417 15.3017 17.3322C15.4095 17.3228 15.518 17.339 15.6183 17.3796L17.2137 18.022L17.2288 18.028C17.4816 18.123 17.7598 18.1263 18.0149 18.0372C18.2699 17.9482 18.4856 17.7725 18.6244 17.5407C18.6261 17.5375 18.628 17.5343 18.63 17.5312L20.4652 14.3563C20.6039 14.1217 20.6547 13.8454 20.6083 13.5769C20.5619 13.3083 20.4215 13.0651 20.2121 12.8906ZM14.4337 11.1616C14.4024 11.827 14.1784 12.4689 13.789 13.0094C13.3996 13.5499 12.8616 13.9656 12.2404 14.206C11.6191 14.4464 10.9414 14.5011 10.2896 14.3634C9.63785 14.2257 9.04013 13.9017 8.56912 13.4306C8.09812 12.9596 7.77413 12.3618 7.63656 11.71C7.49898 11.0582 7.55375 10.3805 7.7942 9.7593C8.03464 9.13807 8.45041 8.60009 8.99094 8.21077C9.53148 7.82145 10.1735 7.59758 10.8389 7.56637C11.3166 7.54533 11.7935 7.62394 12.2391 7.79718C12.6848 7.97042 13.0896 8.2345 13.4277 8.57264C13.7658 8.91078 14.0298 9.31557 14.203 9.76128C14.3762 10.207 14.4547 10.6839 14.4337 11.1616Z" fill="black" fillOpacity="0.8" />
                          <path d="M11 13.0625C12.1391 13.0625 13.0625 12.1391 13.0625 11C13.0625 9.86091 12.1391 8.9375 11 8.9375C9.86091 8.9375 8.9375 9.86091 8.9375 11C8.9375 12.1391 9.86091 13.0625 11 13.0625Z" fill="black" fillOpacity="0.8" />
                          <path d="M20.2121 12.8906L20.1919 12.8743L18.8358 11.8108C18.7499 11.7429 18.6814 11.6555 18.6358 11.556C18.5903 11.4564 18.569 11.3474 18.5737 11.238V10.7413C18.5694 10.6326 18.5909 10.5245 18.6366 10.4257C18.6822 10.327 18.7506 10.2404 18.8362 10.1733L20.1919 9.10938L20.2121 9.09305C20.4212 8.91888 20.5615 8.67602 20.6079 8.4079C20.6544 8.13978 20.6039 7.86387 20.4656 7.62953L18.6304 4.45414C18.6283 4.45114 18.6264 4.44798 18.6248 4.44469C18.4858 4.21359 18.2702 4.03848 18.0155 3.94979C17.7607 3.86109 17.483 3.8644 17.2305 3.95914L17.2155 3.96473L15.6213 4.60625C15.5207 4.64693 15.4118 4.66312 15.3037 4.65348C15.1956 4.64385 15.0914 4.60866 14.9996 4.55082C14.8586 4.46202 14.7154 4.37809 14.5699 4.29902C14.4755 4.24786 14.3945 4.17524 14.3334 4.08702C14.2723 3.9988 14.2327 3.89744 14.218 3.79113L13.9778 2.09L13.9726 2.05906C13.9203 1.79558 13.7789 1.55812 13.5722 1.3866C13.3654 1.21508 13.106 1.11994 12.8374 1.11719H9.16268C8.89028 1.11806 8.62693 1.21503 8.41903 1.39103C8.21112 1.56702 8.07199 1.81075 8.02615 2.07926L8.02229 2.10332L7.78295 3.80789C7.76827 3.9139 7.72904 4.01501 7.6684 4.10318C7.60775 4.19136 7.52736 4.26415 7.43361 4.31578C7.28767 4.39439 7.14436 4.47779 7.00393 4.56586C6.91226 4.62335 6.80826 4.65826 6.70047 4.66775C6.59269 4.67724 6.48419 4.66102 6.38389 4.62043L4.78846 3.9759L4.77342 3.96988C4.52053 3.87504 4.2424 3.87185 3.9874 3.96088C3.73241 4.04991 3.5167 4.22552 3.37779 4.45715L3.37221 4.4666L1.53443 7.64414C1.39592 7.87872 1.34536 8.15493 1.3918 8.42337C1.43825 8.69181 1.57867 8.93497 1.78795 9.10938L1.80815 9.1257L3.16424 10.1892C3.25012 10.2571 3.31865 10.3445 3.36422 10.444C3.40978 10.5436 3.43108 10.6526 3.42635 10.762V11.2587C3.43065 11.3674 3.4091 11.4755 3.36346 11.5743C3.31782 11.673 3.24939 11.7596 3.16381 11.8267L1.80815 12.8906L1.78795 12.907C1.57888 13.0811 1.43857 13.324 1.39213 13.5921C1.34568 13.8602 1.39612 14.1361 1.53443 14.3705L3.36963 17.5459C3.37174 17.5489 3.37361 17.552 3.37522 17.5553C3.51427 17.7864 3.72988 17.9615 3.98459 18.0502C4.2393 18.1389 4.51703 18.1356 4.76955 18.0409L4.78459 18.0353L6.37744 17.3937C6.47806 17.3531 6.5869 17.3369 6.695 17.3465C6.8031 17.3562 6.90737 17.3913 6.9992 17.4492C7.14014 17.5383 7.28337 17.6222 7.42889 17.701C7.52324 17.7521 7.60424 17.8248 7.66537 17.913C7.7265 18.0012 7.76604 18.1026 7.7808 18.2089L8.01971 19.91L8.02486 19.9409C8.07724 20.2049 8.21902 20.4426 8.42628 20.6142C8.63354 20.7858 8.89362 20.8806 9.16268 20.8828H12.8374C13.1098 20.8819 13.3731 20.785 13.581 20.609C13.7889 20.433 13.9281 20.1893 13.9739 19.9207L13.9778 19.8967L14.2171 18.1921C14.232 18.0859 14.2716 17.9847 14.3326 17.8965C14.3936 17.8083 14.4744 17.7356 14.5686 17.6842C14.7155 17.6052 14.859 17.5214 14.9983 17.4341C15.0899 17.3767 15.1939 17.3417 15.3017 17.3322C15.4095 17.3228 15.518 17.339 15.6183 17.3796L17.2137 18.022L17.2288 18.028C17.4816 18.123 17.7598 18.1263 18.0149 18.0372C18.2699 17.9482 18.4856 17.7725 18.6244 17.5407C18.6261 17.5375 18.628 17.5343 18.63 17.5312L20.4652 14.3563C20.6039 14.1217 20.6547 13.8454 20.6083 13.5769C20.5619 13.3083 20.4215 13.0651 20.2121 12.8906ZM14.4337 11.1616C14.4024 11.827 14.1784 12.4689 13.789 13.0094C13.3996 13.5499 12.8616 13.9656 12.2404 14.206C11.6191 14.4464 10.9414 14.5011 10.2896 14.3634C9.63785 14.2257 9.04013 13.9017 8.56912 13.4306C8.09812 12.9596 7.77413 12.3618 7.63656 11.71C7.49898 11.0582 7.55375 10.3805 7.7942 9.7593C8.03464 9.13807 8.45041 8.60009 8.99094 8.21077C9.53148 7.82145 10.1735 7.59758 10.8389 7.56637C11.3166 7.54533 11.7935 7.62394 12.2391 7.79718C12.6848 7.97042 13.0896 8.2345 13.4277 8.57264C13.7658 8.91078 14.0298 9.31557 14.203 9.76128C14.3762 10.207 14.4547 10.6839 14.4337 11.1616Z" fill="black" fillOpacity="0.8" />

                        </svg>
                        <span className={styles.menu_button}>Général</span>
                      </button>
                    </div>
                    <div className={styles.buttonContainer}>
                      <button onClick={Historique} className={styles.buttonPlain}>
                        <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9 0.0625C4.06418 0.0625 0.0625 4.06418 0.0625 9C0.0625 13.9358 4.06418 17.9375 9 17.9375C13.9358 17.9375 17.9375 13.9358 17.9375 9C17.9375 4.06418 13.9358 0.0625 9 0.0625ZM13.125 10.375H9C8.81766 10.375 8.6428 10.3026 8.51386 10.1736C8.38493 10.0447 8.3125 9.86984 8.3125 9.6875V3.5C8.3125 3.31766 8.38493 3.1428 8.51386 3.01386C8.6428 2.88493 8.81766 2.8125 9 2.8125C9.18234 2.8125 9.35721 2.88493 9.48614 3.01386C9.61507 3.1428 9.6875 3.31766 9.6875 3.5V9H13.125C13.3073 9 13.4822 9.07243 13.6111 9.20136C13.7401 9.33029 13.8125 9.50516 13.8125 9.6875C13.8125 9.86984 13.7401 10.0447 13.6111 10.1736C13.4822 10.3026 13.3073 10.375 13.125 10.375Z" fill="black" />
                        </svg>
                        <span className={styles.menu_button}>Historique</span>
                      </button>
                    </div>
                  </div>
                )}
                <img
                  src={
                    params.user.image
                      ? params.user.image
                      : "/icons/default_pp.png"
                  }
                  alt={
                    params.user.image
                      ? `image of ${params.user.username}`
                      : "default profile picture"
                  }
                />
                <PlainButton
                  text="Deconnection"
                  color="black"
                  onClick={() => signOut().then((e) => router.push("/login"))}
                />
                {params.user.permission != "USER" ? (
                  <PlainButton
                    text="Dashboard"
                    color="black"
                    onClick={() => router.push("/dashboard")}
                  />
                ) : (
                  false
                )}
              </div>
              <div className={styles.personal_info}>
                <TextInput
                  className={styles.input}
                  placeholder="Username"
                  setState={setUsername}
                  state={username}
                />
                <TextInput
                  className={styles.input}
                  placeholder="First name"
                  setState={setFirstName}
                  state={firstName}
                />
                <TextInput
                  className={styles.input}
                  placeholder="Last name"
                  setState={setLastName}
                  state={lastName}
                />
                <SelectInput
                  elements={preferences}
                  setState={setGender}
                  state={gender}
                  placeholder="Genre"
                />
              </div>
              <div className={styles.connection_info}>
                <div className={styles.connection}>
                  <p className={styles.type}>Connection Type</p>
                  <p>{params.user.connection_type}</p>
                </div>
                <TextInput
                  className={styles.input}
                  placeholder="Email"
                  setState={setEmail}
                  state={email}
                />
                <PlainButton
                  className={styles.button}
                  text="Reinitialiser le mot de passe"
                />
                <PlainButton
                  className={`${styles.save} ${styles.button}`}
                  text="Sauvegarder"
                />
              </div>
            </div>
          </div>
        </CheckAccountLayout>
      ) : !params.user ? (
        <Loading />
      ) : commande.length != 0 ? (
        <div>
          <div className={styles.menu_container}>
            <div className={styles.buttonContainer}>
              <button onClick={General} className={styles.button1}>
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M11 13.0625C12.1391 13.0625 13.0625 12.1391 13.0625 11C13.0625 9.86091 12.1391 8.9375 11 8.9375C9.86091 8.9375 8.9375 9.86091 8.9375 11C8.9375 12.1391 9.86091 13.0625 11 13.0625Z" fill="black" fillOpacity="0.8" />
                  <path d="M20.2121 12.8906L20.1919 12.8743L18.8358 11.8108C18.7499 11.7429 18.6814 11.6555 18.6358 11.556C18.5903 11.4564 18.569 11.3474 18.5737 11.238V10.7413C18.5694 10.6326 18.5909 10.5245 18.6366 10.4257C18.6822 10.327 18.7506 10.2404 18.8362 10.1733L20.1919 9.10938L20.2121 9.09305C20.4212 8.91888 20.5615 8.67602 20.6079 8.4079C20.6544 8.13978 20.6039 7.86387 20.4656 7.62953L18.6304 4.45414C18.6283 4.45114 18.6264 4.44798 18.6248 4.44469C18.4858 4.21359 18.2702 4.03848 18.0155 3.94979C17.7607 3.86109 17.483 3.8644 17.2305 3.95914L17.2155 3.96473L15.6213 4.60625C15.5207 4.64693 15.4118 4.66312 15.3037 4.65348C15.1956 4.64385 15.0914 4.60866 14.9996 4.55082C14.8586 4.46202 14.7154 4.37809 14.5699 4.29902C14.4755 4.24786 14.3945 4.17524 14.3334 4.08702C14.2723 3.9988 14.2327 3.89744 14.218 3.79113L13.9778 2.09L13.9726 2.05906C13.9203 1.79558 13.7789 1.55812 13.5722 1.3866C13.3654 1.21508 13.106 1.11994 12.8374 1.11719H9.16268C8.89028 1.11806 8.62693 1.21503 8.41903 1.39103C8.21112 1.56702 8.07199 1.81075 8.02615 2.07926L8.02229 2.10332L7.78295 3.80789C7.76827 3.9139 7.72904 4.01501 7.6684 4.10318C7.60775 4.19136 7.52736 4.26415 7.43361 4.31578C7.28767 4.39439 7.14436 4.47779 7.00393 4.56586C6.91226 4.62335 6.80826 4.65826 6.70047 4.66775C6.59269 4.67724 6.48419 4.66102 6.38389 4.62043L4.78846 3.9759L4.77342 3.96988C4.52053 3.87504 4.2424 3.87185 3.9874 3.96088C3.73241 4.04991 3.5167 4.22552 3.37779 4.45715L3.37221 4.4666L1.53443 7.64414C1.39592 7.87872 1.34536 8.15493 1.3918 8.42337C1.43825 8.69181 1.57867 8.93497 1.78795 9.10938L1.80815 9.1257L3.16424 10.1892C3.25012 10.2571 3.31865 10.3445 3.36422 10.444C3.40978 10.5436 3.43108 10.6526 3.42635 10.762V11.2587C3.43065 11.3674 3.4091 11.4755 3.36346 11.5743C3.31782 11.673 3.24939 11.7596 3.16381 11.8267L1.80815 12.8906L1.78795 12.907C1.57888 13.0811 1.43857 13.324 1.39213 13.5921C1.34568 13.8602 1.39612 14.1361 1.53443 14.3705L3.36963 17.5459C3.37174 17.5489 3.37361 17.552 3.37522 17.5553C3.51427 17.7864 3.72988 17.9615 3.98459 18.0502C4.2393 18.1389 4.51703 18.1356 4.76955 18.0409L4.78459 18.0353L6.37744 17.3937C6.47806 17.3531 6.5869 17.3369 6.695 17.3465C6.8031 17.3562 6.90737 17.3913 6.9992 17.4492C7.14014 17.5383 7.28337 17.6222 7.42889 17.701C7.52324 17.7521 7.60424 17.8248 7.66537 17.913C7.7265 18.0012 7.76604 18.1026 7.7808 18.2089L8.01971 19.91L8.02486 19.9409C8.07724 20.2049 8.21902 20.4426 8.42628 20.6142C8.63354 20.7858 8.89362 20.8806 9.16268 20.8828H12.8374C13.1098 20.8819 13.3731 20.785 13.581 20.609C13.7889 20.433 13.9281 20.1893 13.9739 19.9207L13.9778 19.8967L14.2171 18.1921C14.232 18.0859 14.2716 17.9847 14.3326 17.8965C14.3936 17.8083 14.4744 17.7356 14.5686 17.6842C14.7155 17.6052 14.859 17.5214 14.9983 17.4341C15.0899 17.3767 15.1939 17.3417 15.3017 17.3322C15.4095 17.3228 15.518 17.339 15.6183 17.3796L17.2137 18.022L17.2288 18.028C17.4816 18.123 17.7598 18.1263 18.0149 18.0372C18.2699 17.9482 18.4856 17.7725 18.6244 17.5407C18.6261 17.5375 18.628 17.5343 18.63 17.5312L20.4652 14.3563C20.6039 14.1217 20.6547 13.8454 20.6083 13.5769C20.5619 13.3083 20.4215 13.0651 20.2121 12.8906ZM14.4337 11.1616C14.4024 11.827 14.1784 12.4689 13.789 13.0094C13.3996 13.5499 12.8616 13.9656 12.2404 14.206C11.6191 14.4464 10.9414 14.5011 10.2896 14.3634C9.63785 14.2257 9.04013 13.9017 8.56912 13.4306C8.09812 12.9596 7.77413 12.3618 7.63656 11.71C7.49898 11.0582 7.55375 10.3805 7.7942 9.7593C8.03464 9.13807 8.45041 8.60009 8.99094 8.21077C9.53148 7.82145 10.1735 7.59758 10.8389 7.56637C11.3166 7.54533 11.7935 7.62394 12.2391 7.79718C12.6848 7.97042 13.0896 8.2345 13.4277 8.57264C13.7658 8.91078 14.0298 9.31557 14.203 9.76128C14.3762 10.207 14.4547 10.6839 14.4337 11.1616Z" fill="black" fillOpacity="0.8" />

                </svg>
                <span className={styles.menu_button}>Général</span>
              </button>
            </div>
            <div className={styles.buttonContainer}>
              <button onClick={Historique} className={styles.buttonPlain}>
                <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M9 0.0625C4.06418 0.0625 0.0625 4.06418 0.0625 9C0.0625 13.9358 4.06418 17.9375 9 17.9375C13.9358 17.9375 17.9375 13.9358 17.9375 9C17.9375 4.06418 13.9358 0.0625 9 0.0625ZM13.125 10.375H9C8.81766 10.375 8.6428 10.3026 8.51386 10.1736C8.38493 10.0447 8.3125 9.86984 8.3125 9.6875V3.5C8.3125 3.31766 8.38493 3.1428 8.51386 3.01386C8.6428 2.88493 8.81766 2.8125 9 2.8125C9.18234 2.8125 9.35721 2.88493 9.48614 3.01386C9.61507 3.1428 9.6875 3.31766 9.6875 3.5V9H13.125C13.3073 9 13.4822 9.07243 13.6111 9.20136C13.7401 9.33029 13.8125 9.50516 13.8125 9.6875C13.8125 9.86984 13.7401 10.0447 13.6111 10.1736C13.4822 10.3026 13.3073 10.375 13.125 10.375Z" fill="black" />
                </svg>
                <span className={styles.menu_button}>Historique</span>
              </button>
            </div>
          </div>

          <div>
            {product.map(p => {

              return (
                <div key={p.name_product} className={styles.container_historique}>
                  <div className={styles.container_row}>
                    <div className={styles.container_iTd}>
                      <img src={p.name_image} alt="image de chaussure" className={styles.image} />
                      <div className={styles.colonne1}>
                        <div className={styles.container_td}>
                          <h2 className={styles.titre}>{p.name_product}</h2>
                          <p className={styles.description}>{p.description_product}</p>
                        </div>
                        <div className={styles.container_ct}>
                          <div className={styles.container_couleur}>
                            <p className={styles.couleurA}>Couleur: </p>
                            <p className={styles.couleurB}> {p.color_product}</p>
                          </div>
                          <div className={styles.container_taille}>
                            <p className={styles.tailleA}>Taille:</p>
                            <p className={styles.tailleB}> {p.taille_product}</p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div className={styles.colonne2}>
                      <div className={styles.container_rq}>
                        <div className={styles.container_reference}>
                          <p className={styles.referenceA}>Référence: </p>
                          <p className={styles.referenceB}>{commande[1].achat_uid}</p>
                        </div>
                        <div className={styles.container_quantite}>
                          <p className={styles.quantiteA}>Quantité: </p>
                          <p className={styles.quantiteB}>{p.quantite_product}</p>
                        </div>
                      </div>
                      <div className={styles.container_date}>
                        <p className={styles.dateA}>Date d'achat: </p>
                        <p className={styles.dateB}>{(new Date(commande[1].creation_date).getUTCDay()) + '/'+(new Date(commande[1].creation_date).getUTCMonth())+ '/' + (new Date(commande[1].creation_date).getUTCFullYear() + '  ' + commande[1].creation_date)}</p>
                      </div>
                    </div>

                    <div className={styles.container_buttonAvis}>
                      <PlainButton className={styles.buttonAvis} text="Donnez un avis" />
                    </div>
                  </div>
                </div>

              )
            })}
          </div>
        </div>
      ) : (
        <Loading />
      )}
    </>
  );
};

export default Page;
